// flow-typed signature: 334a5c1ff60ec9c3f852d03d6c2307d7
// flow-typed version: <<STUB>>/orderedmap_v1.0.0/flow_v0.67.1

/**
 * This is an autogenerated libdef stub for:
 *
 *   'orderedmap'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module "orderedmap" {
  declare type Key = string
  declare type Place = string

  declare export default class OrderedMap<+a> {
    size: number;
    static from(null | void | { [string]: a } | OrderedMap<a>): OrderedMap<a>;
    get(Key): ?a;
    update(Key, a, ?Key): OrderedMap<a>;
    remove(Key): OrderedMap<a>;
    addToStart(Key, a): OrderedMap<a>;
    addToEnd(Key, a): OrderedMap<a>;
    addBefore(Place, Key, a): OrderedMap<a>;
    forEach(f: (Key, a) => mixed): void;
    prepend({ [string]: a } | OrderedMap<a>): OrderedMap<a>;
    append({ [string]: a } | OrderedMap<a>): OrderedMap<a>;
    subtract({ [string]: a } | OrderedMap<a>): OrderedMap<a>;
  }
}
